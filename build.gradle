import com.modrinth.minotaur.dependencies.ModDependency

plugins {
    id "fabric-loom" version "1.0-SNAPSHOT"
    id "maven-publish"
    id "com.matthewprenger.cursegradle" version "1.+"
    id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName    = project.archives_base_name
version             = "${project.mod_version}+${project.minecraft_version}"
group               = project.maven_group

repositories {
    maven {
        url = "https://api.modrinth.com/maven"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Dev Environment Dependencies
    modRuntimeOnly "maven.modrinth:modmenu:${project.mod_menu_version}"

    modCompileOnly "maven.modrinth:sodium:${project.sodium_version}"
    modRuntimeOnly "maven.modrinth:sodium:${project.sodium_version}"
    modRuntimeOnly 'org.joml:joml:1.10.4'

    modCompileOnly "maven.modrinth:iris:${project.iris_version}"
    modRuntimeOnly "maven.modrinth:iris:${project.iris_version}"
    modRuntimeOnly 'org.anarres:jcpp:1.4.14'
    modRuntimeOnly 'io.github.douira:glsl-transformer:2.0.0-pre8'
}

loom {
    accessWidenerPath = file("src/main/resources/${archivesBaseName}.accesswidener")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

curseforge {
    String apiKey = System.getenv("CURSEFORGE_TOKEN")
    project {
        id            = project.curseforge_id
        changelogType = 'markdown'
        changelog     = project.changelog
        releaseType   = 'release'

        mainArtifact(remapJar) {
            displayName = "${project.mod_name} ${project.mod_version}"
        }
        addArtifact    remapSourcesJar
        addGameVersion project.minecraft_version
        relations {
            requiredLibrary 'fabric-api'
        }
        afterEvaluate {
            uploadTask.dependsOn(remapJar)
            uploadTask.dependsOn(remapSourcesJar)
        }
    }
    options {
        forgeGradleIntegration = false
    }
}

modrinth {
    token           = System.getenv("MODRINTH_TOKEN")
    projectId       = project.modrinth_id
    versionName     = "${project.mod_name} ${project.mod_version}"
    changelog       = project.changelog
    uploadFile      = remapJar
    additionalFiles = [remapSourcesJar]
    gameVersions    = [project.minecraft_version]
    loaders         = ["fabric"]
    dependencies    = [
            new ModDependency("P7dR8mSH", "required") // Fabric API
    ]
    syncBodyFrom    = rootProject.file("README.md").text
}
